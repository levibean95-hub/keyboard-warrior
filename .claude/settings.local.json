{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow",
      "Bash(dir:*)",
      "Bash(npm run dev:*)",
      "Bash(copy srcconfigdatabase.fixed.ts srcconfigdatabase.ts)",
      "Bash(curl:*)",
      "Read(c:\\Users\\B\\Videos\\Projects\\Keyboard Warrior\\database\\KBW Characters/**)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(copy:*)",
      "Bash(git init:*)",
      "Bash(winget install:*)",
      "Bash(gh auth:*)",
      "Bash(where gh)",
      "Bash(refreshenv)",
      "Bash(powershell:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(npx tsc:*)",
      "Bash(winget search:*)",
      "Bash(codex:*)",
      "Bash(chmod:*)",
      "Bash(where codex)",
      "Bash(node:*)",
      "Bash(npx vite build:*)",
      "Bash(npm install:*)",
      "Bash(timeout:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker:*)",
      "Bash(taskkill:*)",
      "Bash(where ngrok)",
      "Bash(tar:*)",
      "Bash(./ngrok.exe version)",
      "Bash(lt:*)",
      "Bash(npx localtunnel:*)",
      "Bash(ssh:*)",
      "Bash(telebit http:*)",
      "Bash(./ngrok.exe http 8080)",
      "Bash(vercel:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(gh:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" --version)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth status)",
      "Bash(npx:*)",
      "Bash(cmd /c:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login -p https -h github.com -w)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login --with-token)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login --web --git-protocol https)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" repo create keyboard-warrior --public --description \"Keyboard Warrior - AI-powered argument assistance web application\" --source=. --remote=origin --push)",
      "Bash(git push:*)",
      "Bash(git ls-tree:*)",
      "Bash(git rm:*)",
      "mcp__render__list_services",
      "mcp__render__list_workspaces",
      "mcp__render__list_deploys",
      "mcp__render__create_web_service",
      "mcp__render__update_web_service",
      "mcp__render__update_environment_variables",
      "mcp__render__list_logs",
      "mcp__render__get_deploy",
      "mcp__render__get_service",
      "Bash(git checkout:*)"
    ],
    "deny": []
  }
}